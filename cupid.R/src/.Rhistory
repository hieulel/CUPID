`250model` <- read.csv("C:/Users/Hoa/Desktop/250/250model.csv", header=FALSE)
View(`250model`)
head(V1)
View(`250model`)
View(`250model`)
`250model` <- read.csv("C:/Users/Hoa/Desktop/250/250model.csv")
View(`250model`)
head(ari)
head(year)
view(year)
head(250model)
head(250model)
head("250model")
model <- read.csv("C:/Users/Hoa/Desktop/250/model.csv")
View(model)
head(model)
#split dataset into "trainning" (70%) and "Validation" (30%)
tdata <- model[ind==1,]
vdata <- model[ind==2,]
#split dataset into "trainning" (80%) and "Validation" (20%)
ind <-sample(2,nrow(model),replace=TRUE,prob = c(0.8,0.2))
tdata <- model[ind==1,]
vdata <- model[ind==2,]
#split dataset into "trainning" (70%) and "Validation" (30%)
ind <-sample(2,nrow(model),replace=TRUE,prob = c(0.7,0.3))
tdata <- model[ind==1,]
ind <-sample(2,nrow(model),replace=TRUE,prob = c(0.7,0.3))
tdata <- model[ind==1,]
vdata <- model[ind==2,]
View(vdata)
head(vdata)
head(vdata)
View(tdata)
View(vdata)
View(tdata)
write.xlsx(tdata, "C:\Users\Hoa\Desktop\Hieu\tdata.xlsx")
write.xlsx(tdata, "c:\users\hoa\Desktop\Hieu\tdata.xlsx")
write.xlsx(tdata, "c:\Desktop\Hieu\tdata.xlsx")
write.xlsx(tdata, "C:/Users/Hoa/Desktop/Hieu/tdata.xlsx")
write.xls(tdata, "C:/Users/Hoa/Desktop/Hieu/tdata.xlsx")
write.table(tdata, "c:/tdata.txt", sep="\t")
write.table(tdata, "c:/tdata.csv", sep="\t")
write.table(tdata, "C:/Users/Hoa/Desktop/250tdata.txt", sep="\t")
write.table(vdata, "C:/Users/Hoa/Desktop/250tdata.txt", sep="\t")
write.table(tdata, "C:/Users/Hoa/Desktop/250tdata.txt", sep="\t")
write.table(vdata, "C:/Users/Hoa/Desktop/250vdata.txt", sep="\t")
library(readxl)
dattwo <- read_excel("C:/Users/Hoa/Desktop/500/dattwo.xlsx")
View(dattwo)
#split dataset into "trainning" (70%) and "Validation" (30%)
ind <-sample(2,nrow(dat2),replace=TRUE,prob = c(0.7,0.3))
write.table(vdata, "C:/Users/Hoa/Desktop/500vdata.txt", sep="\t")
tdata <- model[ind==1,]
vdata <- dattwo[ind==2,]
#split dataset into "trainning" (70%) and "Validation" (30%)
ind <-sample(2,nrow(dattwo),replace=TRUE,prob = c(0.7,0.3))
tdata <- dattwo[ind==1,]
vdata <- dattwo[ind==2,]
write.table(vdata, "C:/Users/Hoa/Desktop/500vdata.txt", sep="\t")
write.table(tdata, "C:/Users/Hoa/Desktop/500tdata.txt", sep="\t")
mean (tdata)
library(readxl)
X730mod <- read_excel("C:/Users/Hoa/Desktop/750/750mod.xlsx")
View(X730mod)
write.table(vdata, "C:/Users/Hoa/Desktop/750vdata.txt", sep="\t")
#split dataset into "trainning" (70%) and "Validation" (30%)
ind <-sample(2,nrow(X730mod),replace=TRUE,prob = c(0.7,0.3))
vdata <- X730mod[ind==2,]
tdata <- X730mod[ind==1,]
write.table(tdata, "C:/Users/Hoa/Desktop/750tdata.txt", sep="\t")
write.table(vdata, "C:/Users/Hoa/Desktop/750vdata.txt", sep="\t")
`750` <- read.csv("C:/Users/Hoa/Desktop/750/750.csv", header=FALSE)
View(`750`)
head(750)
head(750)
View(`750`)
x750 <- read.csv("C:/Users/Hoa/Desktop/750/750.csv", header=FALSE)
View(x750)
View(`750`)
head(x750)
#split dataset into "trainning" (70%) and "Validation" (30%)
ind <-sample(2,nrow(X750),replace=TRUE,prob = c(0.7,0.3))
#split dataset into "trainning" (70%) and "Validation" (30%)
ind <-sample(2,nrow(x750),replace=TRUE,prob = c(0.7,0.3))
write.table(vdata, "C:/Users/Hoa/Desktop/750vdata.txt", sep="\t")
tdata <- x750[ind==1,]
vdata <- x750[ind==2,]
write.table(vdata, "C:/Users/Hoa/Desktop/750vdata.txt", sep="\t")
write.table(tdata, "C:/Users/Hoa/Desktop/750tdata.txt", sep="\t")
write.table(tdata, "C:/Users/Hoa/Desktop/750tdata.txt", sep="\t")
write.table(tdata, "C:/Users/Hoa/Desktop/750tdata.txt", sep="\t")
setwd("~/GitHub/CUPID/cupid.R")
read.table(file = "sample.c7.in",
header = FALSE
skip = 60)
data <- read.table(file = "sample.c7.in",
header = FALSE
skip = 60)
data <- read.table(file = "sample.c7.in",
header = FALSE,
skip = 60)
data <- read.table(file = "sample.c7.in",
header = FALSE,
sep = \,
skip = 60)
sep = "\",
skip = 60
data <- read.table(file = "sample.c7.in",
header = FALSE,
sep = "\",
skip = 60
)
?read.table
?read.table
data <- read.table(file = "sample.c7.in",
header = FALSE,
dec = ".",
skip = 60)
data <- read.table(file = "sample.c7.in",
header = FALSE,
dec = ".",
skip = 60,
sep = "")
data <- read.table(file = "sample.c7.in",
header = FALSE,
dec = ".",
skip = 59,
sep = "")
data <- read.table(file = "sample.c7.in",
header = FALSE,
dec = ".",
skip = 61,
sep = "")
data <- read.table(file = "sample.c7.in",
header = TRUE,
dec = ".",
skip = 60,
sep = "")
data <- read.table(file = "sample.c7.in",
header = FALSE,
dec = ".",
skip = 60,
sep = "")
data <- read.table(file = "sample.c7.in",
fill = FALSE,
header = FALSE,
dec = ".",
skip = 59,
sep = "")
data <- read.table(file = "sample.c7.in",
fill = FALSE,
header = FALSE,
dec = ".",
skip = 59)
data <- read.table(file = "sample.c7.in",
fill = FALSE,
header = FALSE,
skip = 59)
data <- read.table(file = "sample.c7.in.txt",
fill = FALSE,
header = FALSE,
skip = 59)
cupid.inputfile.weather <- read.table(file="sample.c7.in.txt",
# sep ,
fill = FALSE,
header = FALSE,
skip = 59)
installed.packages('utils')
cupid.inputfile.weather <- read.table(file="sample.c7.in.txt",
fill = FALSE,
header = FALSE,
skip = 59)
cupid.inputfile.weather <- read.table(file="sample.c7.in.txt",
fill = TRUE,
header = FALSE,
skip = 59)
data <- read.table(file="sample.c7.in.txt",
fill = TRUE,
header = FALSE,
skip = 59)
data <- read.table(file="sample.c7.in.txt",
fill = TRUE,
header = FALSE,
skip = 59)
data
names(data) <- c('year','doy','local',
'windspeed','NA','rad.flux',
'NA','NA','NA',
'air.temp','air.water.vapor',
'precip',
'day','idxx')
data
names(data) <- c('year','doy','local',
'windspeed','NA','rad.flux',
'NA','NA','NA',
'air.temp','air.water.vapor',
'precip',
'precip.type','day','idxx')
data
plot(windspeed)
plot(data$windspeed)
plot(data$windspeed,type = 'l')
?ma
decompose(data$windspeed)
plot(data$windspeed,type = 'l')
cupid.input <- read.table(file="sample.c7.in",
fill = TRUE,
header = FALSE,
skip = 59)
names(data) <- c('year','doy','local',
'windspeed','NA','rad.flux',
'NA','NA','NA',
'air.temp','air.water.vapor',
'precip',
'precip.type','day','idxx')
plot(data$windspeed,type = 'l')
cupid.input <- read.table(file="sample.c7.in",
fill = TRUE,
header = FALSE,
skip = 59)
names(cupid.input) <- c('year','doy','local',
'windspeed','NA','rad.flux',
'NA','NA','NA',
'air.temp','air.water.vapor',
'precip',
'precip.type','day','idxx')
plot(cupid.input$windspeed,type = 'l')
plot(cupid.input$windspeed,type = 'l')
plot(cupid.input$rad.flux)
plot(cupid.input$rad.flux,type = 'l')
plot(cupid.input$air.water.vapor, type ='l')
op = par(mfrow=c(2,2))
plot(cupid.input$windspeed,type = 'l')
plot(cupid.input$rad.flux,type = 'l')
plot(cupid.input$air.temp, type = 'l')
plot(cupid.input$air.water.vapor, type ='l')
par(op)
op = par(mfrow=c(2,2))
plot(cupid.input$windspeed,type = 'l', main = 'Wind Speed')
plot(cupid.input$rad.flux,type = 'l', main = 'Total Radiation Flux')
plot(cupid.input$air.temp, type = 'l', main = 'Air temperature')
plot(cupid.input$air.water.vapor, type ='l', main = 'Air water vapor pressure')
par(op)
op = par(mfrow=c(2,2))
plot(cupid.input$windspeed,type = 'l', main = 'Wind Speed',
ylab = 'Wind Speed')
plot(cupid.input$rad.flux,type = 'l', main = 'Total Radiation Flux',
ylab = 'Total Radiation Flux')
plot(cupid.input$air.temp, type = 'l', main = 'Air temperature',
ylab = 'Air temperature')
plot(cupid.input$air.water.vapor, type ='l', main = 'Air water vapor pressure',
ylab = 'Air water vapor pressure')
par(op)
require(base)
installed.packages('e1071')
require(forecast)
require(forecasts)
require(stats)
require(MASS)
require(base)
install.packages("e1071")
install.packages("forecast")
install.packages("ggplot2")
install.packages("plot3D")
require(forecast)
install.packages("tidyverse")
install.packages("tidyverse")
require(lubridate)
install.packages("Rcpp")
library(lubridate)
source('~/GitHub/CUPID/cupid.R/deterministic_sa.R')
source('~/GitHub/CUPID/cupid.R/deterministic_sa.R')
source('~/GitHub/CUPID/cupid.R/deterministic_sa.R')
# 10%
deterministic.SA(cupid.input$windspeed,0.1,'pos')
source('~/GitHub/CUPID/cupid.R/deterministic_sa.R')
# 10%
deterministic.SA(cupid.input$windspeed,0.1,'pos')
# 10%
deterministic.SA(cupid.input$windspeed,0.1,'pos')
source('~/GitHub/CUPID/cupid.R/deterministic_sa.R')
# 10%
deterministic.SA(cupid.input$windspeed,0.1,'pos')
cupid.input <- read.table(file="sample.c7.in",
fill = TRUE,
header = FALSE,
skip = 59)
names(cupid.input) <- c('year','doy','local',
'windspeed','NA','rad.flux',
'NA','NA','NA',
'air.temp','air.water.vapor',
'precip',
'precip.type','day','idxx')
op = par(mfrow=c(2,2))
plot(cupid.input$windspeed,type = 'l', main = 'Wind Speed',
ylab = 'Wind Speed')
plot(cupid.input$rad.flux,type = 'l', main = 'Total Radiation Flux',
ylab = 'Total Radiation Flux')
plot(cupid.input$air.temp, type = 'l', main = 'Air temperature',
ylab = 'Air temperature')
plot(cupid.input$air.water.vapor, type ='l', main = 'Air water vapor pressure',
ylab = 'Air water vapor pressure')
par(op)
# 10%
wind.10 <- deterministic.SA(cupid.input$windspeed,0.1,'pos')
source('~/GitHub/CUPID/cupid.R/deterministic_sa.R')
# 10%
wind.10 <- deterministic.SA(cupid.input$windspeed,0.1,'pos')
plot(wind.10,type='l',col='red')
lines(cupid.input$windspeed,col='blue')
wind.10 <- deterministic.SA(cupid.input$windspeed,0.1,'neg')
plot(wind.10,type='l',col='red')
lines(cupid.input$windspeed,col='blue')
wind.10 <- deterministic.SA(cupid.input$windspeed,0.1,'pos')
plot(wind.10,type='l',col='red')
lines(cupid.input$windspeed,col='blue')
# 10%
wind.10 <- deterministic.SA(cupid.input$windspeed,0.1,'neg')
# 10%
wind.10 <- deterministic.SA(cupid.input$windspeed,0.1,'pos')
wind.10 <- deterministic.SA(cupid.input$windspeed,0.1,'neg')
plot(wind.10,type='l',col='red')
lines(cupid.input$windspeed,col='blue')
wind.10 <- deterministic.SA(cupid.input$windspeed,0.1,'pos')
plot(wind.10,type='l',col='red')
lines(cupid.input$windspeed,col='blue')
source('~/GitHub/CUPID/cupid.R/src/calcpath.r')
calcpath(1,2,3,4)
zenang = 1
calcpath(1,2,3,4)
pid2 = 1
calcpath(1,2,3,4)
sunazm = 1
calcpath(1,2,3,4)
calcpath(1,2,3,4)
calcpath(1,2,3,4)
calcpath <- function(nohrs,slope,aspect,path){
for (i in 1:nohrs){
if (zenang[i] < pid2*0.998){
print(paste('zenang of i = '),zenang[i])
return()
}
path[i] = cos(zenang[i])*cos(slope)+sin(zenang[i])*sin(slope)*cos(aspect-sunazm[i])
if (path[i] == 0){
path[i] = 1.0e-11
path[i] = 1.0/path[i]
}
if (path[i] <= 0.0 | path[i] > 1.0e10){
if (path[i] <= 0.0){
path[i] = -1.0
}
} else {
# Sun below horizon
path[i] = -1.0
}
}
print(path)
}
calcpath(1,2,3,4)
noday = c(1,32,60,91,121,152,182,213,244,274,305,335)
noday[12]
setwd("~/GitHub/CUPID/cupid.R/src")
system("ls")
system("dir")
system("ls")
system("cmd.exe",ls")
system("cmd.exe","dir")
system("cmd.exe","dir")
system("cmd.exe","dir",intern=TRUE)
system("cmd.exe","dir",intern=FALSE)
system("cmd.exe","dir",intern=FALSE,ignore.stdout = TRUE)
system("cmd.exe","dir",intern=FALSE,ignore.stdout = TRUE,ignore.stderr = TRUE)
system("cmd.exe","dir",intern=FALSE,ignore.stdout = TRUE,ignore.stderr = TRUE,wait = FALSE)
system("cmd.exe",input ="dir",intern=FALSE,ignore.stdout = TRUE,ignore.stderr = TRUE,wait = FALSE)
system("cmd.exe",input ="ls",intern=FALSE,ignore.stdout = TRUE,ignore.stderr = TRUE,wait = FALSE)
dyn.load("calpath.so")
dyn.load("calpath.so")
dyn.load("calcpath.so")
dyn.load("cupin2.so")
dyn.load("curadin.so")
dyn.load("culad.so")
dyn.load("cupid7")
dyn.load("cupid7")
pwd
getwd
getwd()
system("dir")
dyn.load("cupid7",local = TRUE)
?SHLIB
dyn.load("cupid7.dll",local = TRUE)
