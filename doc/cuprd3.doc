REMEMBER MAX OF 9 OR 10 VARIABLES

You might want to consider moving to cup2rdb. 

See Cupid documentation at:

 http://bob.soils.wisc.edu/soils/cupid.html


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Prompt for prompt documentation for cuprd3 utility program

Template
=================
prompt
-----------------
example-entry
|description and appropriate values
==================
next prompt



==================================
input file name
----------------------------------
sample.c7.out
| output file from cupid model
==================================
output file name
----------------------------------
sample.c7.cuprd3.out
| output table from this program
==================================
print cupid labels?(0,1 stop=-1)
1
| 0 = dont print labels
| 1 = print labels.  This goes through the cupid output file and pirnts
|     all the unique field headers it finds.  See the documentation for
|     how to interpret the codes.  http://bob.soils.wisc.edu/soils/cupid.html
| -1 = Exit the program.  Control C works too. No harm done.
==================================
compare file 24 to 23 (1=yes, 0=no)
----------------------------------
0
| See source code for documentation if you think 
| yes might be of use. 
==================================
input nday,ndayin,day nos
----------------------------------
2,1,225
| nday = is the number of days of output
| ndayin = allows the user to output discontinous days, say 225 and 227.
|          If you want the days in series then you put 1 for this and
|          enter the starting date for the next parameter.  If you want
|          225 and 227 then the entry would be 2,2,225,227.
| day nos = list of days of year - see comment for ndayin.
==================================
preset search- 0=no, 1=bidir
----------------------------------
0
| See source codefor documentation if you think that
| you want to use a hard coded set of search conditions.
==================================
indep vbl(1=hr,2=lay,3=ang)
----------------------------------
1
| Rows in the table can be hour, canopy layer or canopy angle class.
| If you use 2 or 3, make sure that the variables you use are 
| layered or have angle class subscripts.
==================================
input nvbl
----------------------------------
3
| The number of variables you want to output.   The number of
| columns of the table.
==================================
input vbl code-m,nn,col#
vbl 1
----------------------------------
4 1 1
----------------------------------
vbl 2         <- From Program
----------------------------------
7 1 5
----------------------------------
vbl 3         <- From Program
----------------------------------
7 1 6
| enter the code for the variable of interest.  The n and mm are
| from the code on the left side of the output.  See the cupid docs
| for this documentation.  The col# is the column number of the element 
| in the output.  The above three choices are for timloc, htot and hsoil.
==================================
input nhrs/day
----------------------------------
48
| number of time steps per day. 48 for half hour time steps as is the
| case with sample.c7.out
==================================
does any vbl require layers or angle classes (1/0)
0
| If the variable has layers or angle classes then specify the ones you want 
| print as seperate columns.  see NOTE LAYERS AND ANGLE CLASSES

====================================
Output headers show up on the screen
====================================
pnt lab(0,1),data(0,1)
------------------------------------
1,1
| I'm not sure what why.
====================================
no. vbls to hp
------------------------------------
0
| History, see source for docs if curious.
====================================
print cupid labels?(0,1  stop=-1)
------------------------------------
-1
| you are back to the top.  New conditions
| or -1 to leave cuprd 3


===========================================================================
NOTE  LAYERS AND ANGLE CLASSES

One way to output layers and angle classes is to make them the independent
variable and then the layers/angle classes will be the rows.  

Often times you are interested in the time series of what is happening
with a variable at several key layers/angle classes.  To do this
choose layered variables for your variables and then when cuprd3 asks
for 'does any vbl require layers or angle classes (1/0)' answer 1 for yes
then the program continues with:
(example below assumes I choose 5 1 4 , 5 1 5 and 5 1 9 (d,u,and rnet)
======================================
input nlay(l), 1=1, 3
--------------------------------------
2,2,2
| For each of the variables, specify the number of layers you want 
| to print as a seprate columns in the output
======================================
 input 2 layer nos
--------------------------------------
3,12
| Enter the layers you are interested in.
======================================
 input nang(l),l=1, 3(-1=all)
--------------------------------------
0 0 0
| Repeat the same stuff for for angle class if you need it.
| 0 if no angle class.



==============================================================================
NOTE - USING SHELL SCRIPTS FOR REPETITIVE QUERIES

We use a shell script to run cuprd3 against multiple output files
where the fields desired are constant. We call it cuprd.  If you
call it something else, change the usage line below.  The values below
are for the query described above for layers. 

cut here
----------------------------------------------------------
#!/bin/sh

if [ $# -ne 2 ]
then 
   echo Usage: cuprd cupidout  cuprdout
else
   if [ -f $1 ]
   then
      cuprd3 <<!
$1
$2
0
0
2,1,225
0
1
4
4 1 1
5 1 4
5 1 5
5 1 9
48
1
0 2 2 2
3 12
0 0 0 0
1 1
0
-1
!
   else
      echo "cuprd3 input file (cupid out file) does not exist -  cant find " $1
   fi
fi
